public static final int continueFlag = 128;
public static final int signFlag = 64;
public static final int dataBitCount = 7;

public static int[] decodeAdaptive(byte[] data) {
	int length = calcLength(data);
	int[] output = new int[length];
	int outIndex = 0;
		
	//for each encoded byte
	for (int i = 0; i < data.length; i++) {
		byte current = data[i];
		int value = (short) (current & (signFlag - 1));
		int minus = -(current & signFlag);
			
		//add encoded bytes as long as the continue flag is set.
		boolean run = (current & continueFlag) != 0;
		while (run) {
			current = data[++i];
			run = (current & continueFlag) != 0;
			minus <<= dataBitCount;
			value <<= dataBitCount;
			value += current & (continueFlag - 1);
		}
		output[outIndex++] = (value + minus);
	}

	return output;
}

private static int calcLength(byte[] data) {
	int out = 0;
	
	for (int i = 0; i < data.length; i++) {
		if ((data[i] & continueFlag) == 0)
			out++;
	}
	return out;
}